<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aisino.mapper.InvoiceerrorMapper" >
  <resultMap id="BaseResultMap" type="com.aisino.entity.Invoiceerror" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="module" property="module" jdbcType="VARCHAR" />
    <result column="taxcode" property="taxcode" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="extension" property="extension" jdbcType="VARCHAR" />
    <result column="inserttime" property="inserttime" jdbcType="TIMESTAMP" />
    <result column="machineno" property="machineno" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, module, taxcode, content, code, extension, inserttime, machineno
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aisino.entity.InvoiceerrorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoiceerror
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from invoiceerror
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from invoiceerror
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.aisino.entity.InvoiceerrorExample" >
    delete from invoiceerror
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aisino.entity.Invoiceerror" >
    insert into invoiceerror (id, module, taxcode, 
      content, code, extension, 
      inserttime, machineno)
    values (#{id,jdbcType=BIGINT}, #{module,jdbcType=VARCHAR}, #{taxcode,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{extension,jdbcType=VARCHAR}, 
      #{inserttime,jdbcType=TIMESTAMP}, #{machineno,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.aisino.entity.Invoiceerror" >
    insert into invoiceerror
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="module != null" >
        module,
      </if>
      <if test="taxcode != null" >
        taxcode,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="extension != null" >
        extension,
      </if>
      <if test="inserttime != null" >
        inserttime,
      </if>
      <if test="machineno != null" >
        machineno,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="module != null" >
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="taxcode != null" >
        #{taxcode,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="extension != null" >
        #{extension,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null" >
        #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="machineno != null" >
        #{machineno,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aisino.entity.InvoiceerrorExample" resultType="java.lang.Integer" >
    select count(*) from invoiceerror
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update invoiceerror
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.module != null" >
        module = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.taxcode != null" >
        taxcode = #{record.taxcode,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.extension != null" >
        extension = #{record.extension,jdbcType=VARCHAR},
      </if>
      <if test="record.inserttime != null" >
        inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.machineno != null" >
        machineno = #{record.machineno,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update invoiceerror
    set id = #{record.id,jdbcType=BIGINT},
      module = #{record.module,jdbcType=VARCHAR},
      taxcode = #{record.taxcode,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      extension = #{record.extension,jdbcType=VARCHAR},
      inserttime = #{record.inserttime,jdbcType=TIMESTAMP},
      machineno = #{record.machineno,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aisino.entity.Invoiceerror" >
    update invoiceerror
    <set >
      <if test="module != null" >
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="taxcode != null" >
        taxcode = #{taxcode,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="extension != null" >
        extension = #{extension,jdbcType=VARCHAR},
      </if>
      <if test="inserttime != null" >
        inserttime = #{inserttime,jdbcType=TIMESTAMP},
      </if>
      <if test="machineno != null" >
        machineno = #{machineno,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aisino.entity.Invoiceerror" >
    update invoiceerror
    set module = #{module,jdbcType=VARCHAR},
      taxcode = #{taxcode,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      extension = #{extension,jdbcType=VARCHAR},
      inserttime = #{inserttime,jdbcType=TIMESTAMP},
      machineno = #{machineno,jdbcType=SMALLINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>